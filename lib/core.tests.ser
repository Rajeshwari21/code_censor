{
  "module": {
    "0": {
      "title": "Use specific form alters, instead of generic form_alter",
      "description": "Use specific form alters, instead of generic form_alter",
      "links": [
        {
          "title": "function hook_form_FORM_ID_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Form%21form.api.php/function/hook_form_FORM_ID_alter/8.7.x"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_form_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "1": {
      "title": "Avoid using $_GET, $_POST and $_SERVER Variables directly",
      "description": "For security always avoid using $_GET, $_POST and $_SERVER variables directly as the raw input may contain harmful instead use the Drupal::service('request_stack')",
      "links": [
        {
          "title": "Using PHP Super-globals",
          "link": "https://www.drupal.org/node/2150267"
        },
        {
          "title": "How to get post and get params",
          "link": "https://drupal.stackexchange.com/questions/207044/how-to-get-post-and-get-parameters"
        }
      ],
      "regex": "\\$_GET|\\$_POST|\\$_SERVER",
      "file_types": [
        "php",
        "module",
        "theme"
      ],
      "category": [
        "security",
        "best_practices"
      ]
    },
    "2": {
      "title": "Avoid using hook_entity_type_create/delete/update and use Event subscribers instead.",
      "description": "Avoid using hook_entity_type_create/delete/update and use Event subscribers instead",
      "links": [
        {
          "title": "EventSubscriber example.",
          "link": "https://www.drupal.org/docs/8/modules/simple-fb-connect-8x/eventsubscriber-example"
        }
      ],
      "regex": "hook_ENTITY_TYPE_(create|delete|insert|update|view|load)\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "3": {
      "title": "Avoid hook_library_info_alter for static css/js ans use Libraries-extend or Libraries-override instead",
      "description": "Avoid hook_library_info_alter for static css/js ans use Libraries-extend or Libraries-override instead",
      "links": [
        {
          "title": "Adding stylesheets (CSS) and JavaScript (JS) to a Drupal 8.",
          "link": "https://www.drupal.org/docs/8/theming/adding-stylesheets-css-and-javascript-js-to-a-drupal-8-theme"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_library_info_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "4": {
      "title": "Avoid using hook_entity_load, decreases performance.",
      "description": "Avoid using hook_entity_load, decreases performance.",
      "links": [
        {
          "title": "Drupal Coding for Optimal Performance.",
          "link": "https://www.oreilly.com/library/view/high-performance-drupal/9781449358013/ch04.html"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_entity_load\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "5": {
      "title": "Use specific preprocess hooks, avoid using hook_preprocess",
      "description": "Use specific preprocess hooks, avoid using hook_preprocess",
      "links": [
        {
          "title": "function hook_preprocess_HOOK.",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_preprocess_HOOK/8.7.x."
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_preprocess\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "6": {
      "title": "Use hook_block_view_BASE_BLOCK_ID_alter for better performance.",
      "description": "Use hook_block_view_BASE_BLOCK_ID_alter instead of hook_block_view_alter.",
      "links": [
        {
          "title": "function hook_block_view_BASE_BLOCK_ID_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21modules%21block%21block.api.php/function/hook_block_view_BASE_BLOCK_ID_alter/8.7.x"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_block_view_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "7": {
      "title": "Use hook_theme_suggestions_HOOK_alter for better performance.",
      "description": "Use hook_theme_suggestions_HOOK_alter instead of hook_theme_suggestions_alter.",
      "links": [
        {
          "title": "function hook_theme_suggestions_HOOK_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_theme_suggestions_HOOK_alter/8.7.x"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_theme_suggestions_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "8": {
      "title": "Avoid double quotes for strings without variables.",
      "description": "Avoid double quotes for strings without variables.",
      "links": [
        {
          "title": "Drupal coding standards.",
          "link": "https://www.drupal.org/docs/develop/standards/coding-standards"
        }
      ],
      "regex": "\\\"((?!\\$).)*\\\"",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "9": {
      "title": "Avoid using db_query or query()",
      "description": "Use dynamic queries instead of static queries",
      "links": [
        {
          "title": "Dynamic Queries",
          "link": "https://www.drupal.org/docs/8/api/database-api/dynamic-queries"
        }
      ],
      "regex": "->query|db_query\\(",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    },
    "10": {
      "title": "Use hook_field_widget_WIDGET_TYPE_form_alter for better performance.",
      "description": "Use hook_field_widget_WIDGET_TYPE_form_alter instead of hook_field_widget_form_alter.",
      "links": [
        {
          "title": "function hook_field_widget_WIDGET_TYPE_form_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21modules%21field%21field.api.php/function/hook_field_widget_WIDGET_TYPE_form_alter"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_field_widget_form_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "11": {
      "title": "Use cache tags for node cache",
      "description": "Avoid node_list cache tag and use specific cache tag instead",
      "links": [
        {
          "title": "Using cache tags for a particular node list\n",
          "link": "https://drupal.stackexchange.com/questions/200321/using-cache-tags-for-a-particular-node-list"
        }
      ],
      "regex": "(\\\"|\\')\\#cache(\\\"|\\')[\\](\\\"|\\')tags(\\\"|\\').(\\=\\>| \\=).(\\[|)[ a-z\\'\\,\\t0-9\\:\\_\\n\\-\\[\\]]*(\\\"|\\')node_list(\\\"|\\')(\\]|)(?=(\\;|\\,))",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "12": {
      "title": "Use const keywords to define constants.",
      "description": "Avoid define(), Use const keyword to define constants.",
      "links": [
        {
          "title": "Use const keyword to define constants instead of define()",
          "link": "https://www.drupal.org/node/1362360"
        }
      ],
      "regex": "define\\((\\\"|\\')[a-zA-Z0-9\\_]*(\\\"|\\')",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "13": {
      "title": "Use cache context for performance..",
      "description": "Avoid using #cache max-age = 0 and use cache context instead.",
      "links": [
        {
          "title": "Cacheability of render arrays",
          "link": "https://www.drupal.org/docs/8/api/render-api/cacheability-of-render-arrays"
        }
      ],
      "regex": "(\\\"|\\')\\#cache(\\\"|\\').*?(\\n.*?|)+(\\\"|\\')max\\-age(\\\"|\\').(\\=\\>| \\=)[ 0-9]*(?=(\\;|\\,))",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "14": {
      "title": "Use \\Drupal::routeMatch() for security.",
      "description": "Avoid calling Drupal::request() for route parameters, use \\Drupal::routeMatch() instead.",
      "links": [
        {
          "title": "Use of \\Drupal::routeMatch()",
          "link": "https://drupal.stackexchange.com/questions/6638/how-do-i-get-the-node-id-from-the-url/202185#202185"
        }
      ],
      "regex": "(\\\\|)Drupal::request\\(\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "security"
      ]
    },
    "15": {
      "title": "Use Drupal date formatter.",
      "description": "Avoid using php date formatters, use \\Drupal::service('date.formatter')->format() instead ",
      "links": [
        {
          "title": "Date Formatter",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Datetime%21DateFormatter.php/function/DateFormatter%3A%3Aformat/8.7.x"
        }
      ],
      "regex": "(gm|i)*date\\((\\\"|\\')[ ,d,D,j,l,N,S,w,Z,W,F,m,M,n,t,L,o,Y,y,A,a,G,g,H,h,B,i,s,u,v,e,I,O,P,T,Z,c,r,U,:]*(\\\"|\\')(\\,|)[ a-z0-9\\\"\\(\\)\\-\\:\\']*\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    },
    "16": {
      "title": "File management using file system service.",
      "description": "Use \\Drupal::service('file_system')-><function> instead of file_unmanaged_<function> and other functions.",
      "links": [
        {
          "title": "Unmanaged file functions replaced with a service",
          "link": "https://www.drupal.org/node/3006851"
        }
      ],
      "regex": "file_(unmanaged_|prepare_directory|destination|create_filename)[a-z\\_]*\\(\\$[ a-z\\,\\$]*\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    }
  },
  "theme": {
    "0": {
      "title": "Use specific form alters, instead of generic form_alter",
      "description": "Use specific form alters, instead of generic form_alter",
      "links": [
        {
          "title": "function hook_form_FORM_ID_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Form%21form.api.php/function/hook_form_FORM_ID_alter/8.7.x"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_form_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "1": {
      "title": "Avoid using $_GET, $_POST and $_SERVER Variables directly",
      "description": "For security always avoid using $_GET, $_POST and $_SERVER variables directly as the raw input may contain harmful instead use the Drupal::service('request_stack')",
      "links": [
        {
          "title": "Using PHP Super-globals",
          "link": "https://www.drupal.org/node/2150267"
        },
        {
          "title": "How to get post and get params",
          "link": "https://drupal.stackexchange.com/questions/207044/how-to-get-post-and-get-parameters"
        }
      ],
      "regex": "\\$_GET|\\$_POST|\\$_SERVER",
      "file_types": [
        "php",
        "module",
        "theme"
      ],
      "category": [
        "security",
        "best_practices"
      ]
    },
    "2": {
      "title": "Avoid using hook_entity_type_create/delete/update and use Event subscribers instead.",
      "description": "Avoid using hook_entity_type_create/delete/update and use Event subscribers instead",
      "links": [
        {
          "title": "EventSubscriber example.",
          "link": "https://www.drupal.org/docs/8/modules/simple-fb-connect-8x/eventsubscriber-example"
        }
      ],
      "regex": "hook_ENTITY_TYPE_(create|delete|insert|update|view|load)\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "3": {
      "title": "Avoid hook_library_info_alter for static css/js ans use Libraries-extend or Libraries-override instead",
      "description": "Avoid hook_library_info_alter for static css/js ans use Libraries-extend or Libraries-override instead",
      "links": [
        {
          "title": "Adding stylesheets (CSS) and JavaScript (JS) to a Drupal 8.",
          "link": "https://www.drupal.org/docs/8/theming/adding-stylesheets-css-and-javascript-js-to-a-drupal-8-theme"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_library_info_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "4": {
      "title": "Avoid using hook_entity_load, decreases performance.",
      "description": "Avoid using hook_entity_load, decreases performance.",
      "links": [
        {
          "title": "Drupal Coding for Optimal Performance.",
          "link": "https://www.oreilly.com/library/view/high-performance-drupal/9781449358013/ch04.html"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_entity_load\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "5": {
      "title": "Use specific preprocess hooks, avoid using hook_preprocess",
      "description": "Use specific preprocess hooks, avoid using hook_preprocess",
      "links": [
        {
          "title": "function hook_preprocess_HOOK.",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_preprocess_HOOK/8.7.x."
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_preprocess\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "6": {
      "title": "Use hook_block_view_BASE_BLOCK_ID_alter for better performance.",
      "description": "Use hook_block_view_BASE_BLOCK_ID_alter instead of hook_block_view_alter.",
      "links": [
        {
          "title": "function hook_block_view_BASE_BLOCK_ID_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21modules%21block%21block.api.php/function/hook_block_view_BASE_BLOCK_ID_alter/8.7.x"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_block_view_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "7": {
      "title": "Use hook_theme_suggestions_HOOK_alter for better performance.",
      "description": "Use hook_theme_suggestions_HOOK_alter instead of hook_theme_suggestions_alter.",
      "links": [
        {
          "title": "function hook_theme_suggestions_HOOK_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_theme_suggestions_HOOK_alter/8.7.x"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_theme_suggestions_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "8": {
      "title": "Avoid double quotes for strings without variables.",
      "description": "Avoid double quotes for strings without variables.",
      "links": [
        {
          "title": "Drupal coding standards.",
          "link": "https://www.drupal.org/docs/develop/standards/coding-standards"
        }
      ],
      "regex": "\\\"((?!\\$).)*\\\"",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "9": {
      "title": "Avoid using db_query or query()",
      "description": "Use dynamic queries instead of static queries",
      "links": [
        {
          "title": "Dynamic Queries",
          "link": "https://www.drupal.org/docs/8/api/database-api/dynamic-queries"
        }
      ],
      "regex": "->query|db_query\\(",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    },
    "10": {
      "title": "Use hook_field_widget_WIDGET_TYPE_form_alter for better performance.",
      "description": "Use hook_field_widget_WIDGET_TYPE_form_alter instead of hook_field_widget_form_alter.",
      "links": [
        {
          "title": "function hook_field_widget_WIDGET_TYPE_form_alter.",
          "link": "https://api.drupal.org/api/drupal/core%21modules%21field%21field.api.php/function/hook_field_widget_WIDGET_TYPE_form_alter"
        }
      ],
      "regex": "(function |)[a-z0-9\\_]*_field_widget_form_alter\\(.*\\)",
      "file_types": [
        "module",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "11": {
      "title": "Use cache tags for node cache",
      "description": "Avoid node_list cache tag and use specific cache tag instead",
      "links": [
        {
          "title": "Using cache tags for a particular node list\n",
          "link": "https://drupal.stackexchange.com/questions/200321/using-cache-tags-for-a-particular-node-list"
        }
      ],
      "regex": "(\\\"|\\')\\#cache(\\\"|\\')[\\](\\\"|\\')tags(\\\"|\\').(\\=\\>| \\=).(\\[|)[ a-z\\'\\,\\t0-9\\:\\_\\n\\-\\[\\]]*(\\\"|\\')node_list(\\\"|\\')(\\]|)(?=(\\;|\\,))",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "12": {
      "title": "Use const keywords to define constants.",
      "description": "Avoid define(), Use const keyword to define constants.",
      "links": [
        {
          "title": "Use const keyword to define constants instead of define()",
          "link": "https://www.drupal.org/node/1362360"
        }
      ],
      "regex": "define\\((\\\"|\\')[a-zA-Z0-9\\_]*(\\\"|\\')",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "13": {
      "title": "Use cache context for performance..",
      "description": "Avoid using #cache max-age = 0 and use cache context instead.",
      "links": [
        {
          "title": "Cacheability of render arrays",
          "link": "https://www.drupal.org/docs/8/api/render-api/cacheability-of-render-arrays"
        }
      ],
      "regex": "(\\\"|\\')\\#cache(\\\"|\\').*?(\\n.*?|)+(\\\"|\\')max\\-age(\\\"|\\').(\\=\\>| \\=)[ 0-9]*(?=(\\;|\\,))",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "14": {
      "title": "Use \\Drupal::routeMatch() for security.",
      "description": "Avoid calling Drupal::request() for route parameters, use \\Drupal::routeMatch() instead.",
      "links": [
        {
          "title": "Use of \\Drupal::routeMatch()",
          "link": "https://drupal.stackexchange.com/questions/6638/how-do-i-get-the-node-id-from-the-url/202185#202185"
        }
      ],
      "regex": "(\\\\|)Drupal::request\\(\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "security"
      ]
    },
    "15": {
      "title": "Use Drupal date formatter.",
      "description": "Avoid using php date formatters, use \\Drupal::service('date.formatter')->format() instead ",
      "links": [
        {
          "title": "Date Formatter",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Datetime%21DateFormatter.php/function/DateFormatter%3A%3Aformat/8.7.x"
        }
      ],
      "regex": "(gm|i)*date\\((\\\"|\\')[ ,d,D,j,l,N,S,w,Z,W,F,m,M,n,t,L,o,Y,y,A,a,G,g,H,h,B,i,s,u,v,e,I,O,P,T,Z,c,r,U,:]*(\\\"|\\')(\\,|)[ a-z0-9\\\"\\(\\)\\-\\:\\']*\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    },
    "16": {
      "title": "File management using file system service.",
      "description": "Use \\Drupal::service('file_system')-><function> instead of file_unmanaged_<function> and other functions.",
      "links": [
        {
          "title": "Unmanaged file functions replaced with a service",
          "link": "https://www.drupal.org/node/3006851"
        }
      ],
      "regex": "file_(unmanaged_|prepare_directory|destination|create_filename)[a-z\\_]*\\(\\$[ a-z\\,\\$]*\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    }
  },
  "php": {
    "0": {
      "title": "Avoid using $_GET, $_POST and $_SERVER Variables directly",
      "description": "For security always avoid using $_GET, $_POST and $_SERVER variables directly as the raw input may contain harmful instead use the Drupal::service('request_stack')",
      "links": [
        {
          "title": "Using PHP Super-globals",
          "link": "https://www.drupal.org/node/2150267"
        },
        {
          "title": "How to get post and get params",
          "link": "https://drupal.stackexchange.com/questions/207044/how-to-get-post-and-get-parameters"
        }
      ],
      "regex": "\\$_GET|\\$_POST|\\$_SERVER",
      "file_types": [
        "php",
        "module",
        "theme"
      ],
      "category": [
        "security",
        "best_practices"
      ]
    },
    "1": {
      "title": "Avoid double quotes for strings without variables.",
      "description": "Avoid double quotes for strings without variables.",
      "links": [
        {
          "title": "Drupal coding standards.",
          "link": "https://www.drupal.org/docs/develop/standards/coding-standards"
        }
      ],
      "regex": "\\\"((?!\\$).)*\\\"",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "2": {
      "title": "Avoid using db_query or query()",
      "description": "Use dynamic queries instead of static queries",
      "links": [
        {
          "title": "Dynamic Queries",
          "link": "https://www.drupal.org/docs/8/api/database-api/dynamic-queries"
        }
      ],
      "regex": "->query|db_query\\(",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    },
    "3": {
      "title": "Use cache tags for node cache",
      "description": "Avoid node_list cache tag and use specific cache tag instead",
      "links": [
        {
          "title": "Using cache tags for a particular node list\n",
          "link": "https://drupal.stackexchange.com/questions/200321/using-cache-tags-for-a-particular-node-list"
        }
      ],
      "regex": "(\\\"|\\')\\#cache(\\\"|\\')[\\](\\\"|\\')tags(\\\"|\\').(\\=\\>| \\=).(\\[|)[ a-z\\'\\,\\t0-9\\:\\_\\n\\-\\[\\]]*(\\\"|\\')node_list(\\\"|\\')(\\]|)(?=(\\;|\\,))",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "4": {
      "title": "Use const keywords to define constants.",
      "description": "Avoid define(), Use const keyword to define constants.",
      "links": [
        {
          "title": "Use const keyword to define constants instead of define()",
          "link": "https://www.drupal.org/node/1362360"
        }
      ],
      "regex": "define\\((\\\"|\\')[a-zA-Z0-9\\_]*(\\\"|\\')",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "5": {
      "title": "Use services.yml to override core services.",
      "description": "Avoid creating custom service provider class to override drupal core services, use services.yml to override instead",
      "links": [
        {
          "title": "Altering existing services, providing dynamic services.",
          "link": "https://www.drupal.org/docs/8/api/services-and-dependency-injection/altering-existing-services-providing-dynamic-services"
        }
      ],
      "regex": "class [a-zA-Z]*ServiceProvider extends ServiceProviderBase",
      "file_types": [
        "php"
      ],
      "category": [
        "performance"
      ]
    },
    "6": {
      "title": "Use cache context for performance..",
      "description": "Avoid using #cache max-age = 0 and use cache context instead.",
      "links": [
        {
          "title": "Cacheability of render arrays",
          "link": "https://www.drupal.org/docs/8/api/render-api/cacheability-of-render-arrays"
        }
      ],
      "regex": "(\\\"|\\')\\#cache(\\\"|\\').*?(\\n.*?|)+(\\\"|\\')max\\-age(\\\"|\\').(\\=\\>| \\=)[ 0-9]*(?=(\\;|\\,))",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "performance"
      ]
    },
    "7": {
      "title": "Use \\Drupal::routeMatch() for security.",
      "description": "Avoid calling Drupal::request() for route parameters, use \\Drupal::routeMatch() instead.",
      "links": [
        {
          "title": "Use of \\Drupal::routeMatch()",
          "link": "https://drupal.stackexchange.com/questions/6638/how-do-i-get-the-node-id-from-the-url/202185#202185"
        }
      ],
      "regex": "(\\\\|)Drupal::request\\(\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "security"
      ]
    },
    "8": {
      "title": "Use Drupal date formatter.",
      "description": "Avoid using php date formatters, use \\Drupal::service('date.formatter')->format() instead ",
      "links": [
        {
          "title": "Date Formatter",
          "link": "https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Datetime%21DateFormatter.php/function/DateFormatter%3A%3Aformat/8.7.x"
        }
      ],
      "regex": "(gm|i)*date\\((\\\"|\\')[ ,d,D,j,l,N,S,w,Z,W,F,m,M,n,t,L,o,Y,y,A,a,G,g,H,h,B,i,s,u,v,e,I,O,P,T,Z,c,r,U,:]*(\\\"|\\')(\\,|)[ a-z0-9\\\"\\(\\)\\-\\:\\']*\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    },
    "9": {
      "title": "File management using file system service.",
      "description": "Use \\Drupal::service('file_system')-><function> instead of file_unmanaged_<function> and other functions.",
      "links": [
        {
          "title": "Unmanaged file functions replaced with a service",
          "link": "https://www.drupal.org/node/3006851"
        }
      ],
      "regex": "file_(unmanaged_|prepare_directory|destination|create_filename)[a-z\\_]*\\(\\$[ a-z\\,\\$]*\\)",
      "file_types": [
        "module",
        "php",
        "theme"
      ],
      "category": [
        "best_practices"
      ]
    }
  },
  "html.twig": {
    "0": {
      "title": "Avoid raw filter in twig",
      "description": "This filter should be avoided whenever possible, particularly if you're outputting data that could be user-entered.",
      "links": [
        {
          "title": "Using twig filters | raw filter",
          "link": "https://www.drupal.org/docs/8/theming/twig/filters-modifying-variables-in-twig-templates#raw"
        }
      ],
      "regex": "\\|\\s?raw",
      "file_types": [
        "html.twig"
      ],
      "category": [
        "security"
      ]
    }
  }
}